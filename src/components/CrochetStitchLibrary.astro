---
// CrochetStitchLibrary.astro
---

<div id="crochet-stitch-library" class="w-full bg-gray-50">
  <div class="loading-message text-center py-12">
    <div class="text-4xl mb-4">🧶</div>
    <p class="text-gray-600">Loading Crochet Stitch Library...</p>
  </div>
</div>

<script>
// Import React from CDN since we can't use ES6 imports in Astro script tags
const script = document.createElement('script');
script.src = 'https://unpkg.com/react@18/umd/react.development.js';
script.onload = () => {
  const reactDOMScript = document.createElement('script');
  reactDOMScript.src = 'https://unpkg.com/react-dom@18/umd/react-dom.development.js';
  reactDOMScript.onload = initializeCrochetLibrary;
  document.head.appendChild(reactDOMScript);
};
document.head.appendChild(script);

function initializeCrochetLibrary() {
  const { useState, createElement: h, Fragment } = React;
  const { createRoot } = ReactDOM;

  // Stitch data (remains the same)
  const stitchLibrary = {
    'single-crochet': {
      id: 'single-crochet', name: 'Single Crochet (SC)', difficulty: 'Beginner', category: 'Basic',
      description: 'The foundation of crochet - a simple, sturdy stitch perfect for beginners.',
      instructions: ['Insert hook into the next stitch', 'Yarn over and pull through (2 loops on hook)', 'Yarn over and pull through both loops (1 loop remains)', 'Repeat for each stitch across'],
      tips: ['Keep tension consistent for even stitches', 'Count your stitches at the end of each row', 'The turning chain does not count as a stitch'],
      variations: ['Single crochet in back loop only (creates ridged texture)', 'Single crochet in front loop only (creates raised edge)', 'Extended single crochet (adds height with extra yarn over)'],
    },
    'double-crochet': {
      id: 'double-crochet', name: 'Double Crochet (DC)', difficulty: 'Beginner', category: 'Basic',
      description: 'A taller stitch that works up quickly and creates an open, airy fabric.',
      instructions: ['Yarn over, insert hook into next stitch', 'Yarn over and pull through (3 loops on hook)', 'Yarn over, pull through 2 loops (2 loops remain)', 'Yarn over, pull through last 2 loops'],
      tips: ['Chain 3 at the beginning counts as first double crochet', 'Work into the top of the chain-3 when coming back', 'Perfect for blankets and scarves'],
      variations: ['Front post double crochet (FPDC)', 'Back post double crochet (BPDC)', 'Double crochet cluster'],
    },
    'half-double-crochet': {
      id: 'half-double-crochet', name: 'Half Double Crochet (HDC)', difficulty: 'Beginner', category: 'Basic',
      description: 'A medium-height stitch that bridges single and double crochet.',
      instructions: ['Yarn over, insert hook into next stitch', 'Yarn over and pull through (3 loops on hook)', 'Yarn over and pull through all 3 loops at once'],
      tips: ['Chain 2 to turn (usually doesn\'t count as stitch)', 'Creates a dense but flexible fabric', 'Great for hats and fitted garments'],
      variations: ['Standing half double crochet', 'Half double crochet in third loop', 'Linked half double crochet'],
    },
    'treble-crochet': {
      id: 'treble-crochet', name: 'Treble Crochet (TR)', difficulty: 'Intermediate', category: 'Basic',
      description: 'A tall stitch perfect for creating height and open lacework.',
      instructions: ['Yarn over twice, insert hook into next stitch', 'Yarn over and pull through (4 loops on hook)', 'Yarn over, pull through 2 loops (3 loops remain)', 'Yarn over, pull through 2 loops (2 loops remain)', 'Yarn over, pull through last 2 loops'],
      tips: ['Chain 4 to turn counts as first treble', 'Excellent for shawls and decorative edges', 'Keep yarn overs loose to prevent tight stitches'],
      variations: ['Double treble crochet (DTR)', 'Triple treble crochet (TRTR)', 'Treble crochet cluster'],
    },
    'slip-stitch': {
      id: 'slip-stitch', name: 'Slip Stitch (SL ST)', difficulty: 'Beginner', category: 'Basic',
      description: 'The shortest stitch, used for joining and creating smooth edges.',
      instructions: ['Insert hook into next stitch', 'Yarn over and pull through both the stitch and loop on hook in one motion'],
      tips: ['Creates almost no height', 'Perfect for joining rounds', 'Don\'t pull too tight'],
      variations: ['Surface slip stitch (decorative)', 'Reverse slip stitch', 'Slip stitch seaming'],
    },
    'shell-stitch': {
      id: 'shell-stitch', name: 'Shell Stitch', difficulty: 'Intermediate', category: 'Decorative',
      description: 'Multiple stitches worked into the same space creating a fan or shell shape.',
      instructions: ['Skip 2 stitches, work 5 double crochet in next stitch', 'Skip 2 stitches, single crochet in next stitch', 'Repeat across row', 'Chain 3, turn'],
      tips: ['Count carefully to maintain pattern', 'Block finished pieces for best shell definition', 'Great for blanket borders'],
      variations: ['Small shell (3 DC)', 'Large shell (7 DC)', 'Picot shell stitch'],
    },
    'granny-square': {
      id: 'granny-square', name: 'Granny Square', difficulty: 'Intermediate', category: 'Motifs',
      description: 'The classic crochet motif worked in rounds with chain spaces.',
      instructions: ['Round 1: Magic ring, ch 3, 2 dc, ch 2, *3 dc, ch 2* 3 times, join', 'Round 2: Sl st to corner space, ch 3, 2 dc, ch 2, 3 dc in same space', 'Ch 1, *3 dc, ch 2, 3 dc in corner, ch 1* repeat around', 'Continue adding rounds as desired'],
      tips: ['Keep corner chain-2 spaces consistent', 'Change colors each round for traditional look', 'Block squares before joining'],
      variations: ['Solid granny square', 'Flower granny square', 'African flower square'],
    },
    'moss-stitch': {
      id: 'moss-stitch', name: 'Moss Stitch (Linen Stitch)', difficulty: 'Intermediate', category: 'Textured',
      description: 'Alternating single crochet and chain spaces create a woven texture.',
      instructions: ['Row 1: *Sc, ch 1, skip next st* repeat across', 'Row 2: *Sc in ch-1 space, ch 1* repeat across', 'Repeat Row 2 for pattern'],
      tips: ['Use same size hook as yarn weight recommendation', 'Creates a stable, non-curling fabric', 'Perfect for dishcloths and bags'],
      variations: ['Extended moss stitch', 'Moss stitch in the round', 'Two-color moss stitch'],
    }
  };

  // Simple router
  function useRouter() {
    const [currentRoute, setCurrentRoute] = useState('/');
    const navigate = (path) => setCurrentRoute(path);
    return { currentRoute, navigate };
  }

  // Icon components (remain the same)
  const SearchIcon = () => h('svg', { className: 'w-5 h-5', fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, h('path', { strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: 2, d: 'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z' }));
  const ChevronLeftIcon = () => h('svg', { className: 'w-5 h-5', fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, h('path', { strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: 2, d: 'M15 19l-7-7 7-7' }));
  const BookIcon = () => h('svg', { className: 'w-6 h-6', fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, h('path', { strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: 2, d: 'M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253' }));
  const PlayIcon = () => h('svg', { className: 'w-6 h-6', fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, h('path', { strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: 2, d: 'M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M12 5a9 9 0 019 9 9 9 0 01-9 9 9 9 0 01-9-9 9 9 0 019-9z' }));
  const LightbulbIcon = () => h('svg', { className: 'w-6 h-6', fill: 'none', stroke: 'currentColor', viewBox: '0 0 24 24' }, h('path', { strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: 2, d: 'M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z' }));

  // Components
  const StitchCard = ({ stitch, onClick }) => {
    return h('div', {
      className: 'bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow cursor-pointer border-l-4 border-pink-400 flex flex-col justify-between',
      onClick: () => onClick(stitch.id)
    }, [
      h('div', { key: 'content' }, [
        h('div', { key: 'header', className: 'flex justify-between items-start mb-3' }, [
          h('h3', { key: 'title', className: 'text-xl font-semibold text-gray-800' }, stitch.name),
          h('span', {
            key: 'difficulty',
            className: `px-2 py-1 rounded-full text-xs font-medium ${stitch.difficulty === 'Beginner' ? 'bg-green-100 text-green-800' : stitch.difficulty === 'Intermediate' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`
          }, stitch.difficulty)
        ]),
        h('p', { key: 'description', className: 'text-gray-600 mb-4' }, stitch.description),
      ]),
      h('div', { key: 'footer', className: 'flex justify-between items-center mt-auto' }, [
        h('span', { key: 'category', className: 'text-sm text-pink-600 font-medium' }, stitch.category),
        h('div', { key: 'diagram', className: 'text-2xl' }, stitch.diagram)
      ])
    ]);
  };

  const StitchDetail = ({ stitch, onBack }) => {
    return h('div', {
      className: 'max-w-4xl mx-auto px-6 py-6'
    }, [
      h('div', { key: 'main', className: 'mb-6' }, [
        h('button', {
          key: 'back-btn',
          onClick: onBack,
          className: 'flex items-center text-pink-600 hover:text-pink-700 mb-4'
        }, [
          h(ChevronLeftIcon, { key: 'icon' }),
          ' Back to Library'
        ]),
        h('div', { key: 'content', className: 'bg-white rounded-lg shadow-lg overflow-hidden' }, [
          h('div', { key: 'header', className: 'bg-gradient-to-r from-pink-500 to-purple-600 text-white p-6' }, [
            h('div', { className: 'flex justify-between items-start' }, [
              h('div', { key: 'left' }, [
                h('h1', { key: 'title', className: 'text-3xl font-bold mb-2' }, stitch.name),
                h('p', { key: 'desc', className: 'text-pink-100 text-lg' }, stitch.description)
              ]),
              h('div', { key: 'right', className: 'text-right' }, [
                h('span', {
                  key: 'difficulty',
                  className: `px-3 py-1 rounded-full text-sm font-medium ${stitch.difficulty === 'Beginner' ? 'bg-green-500 text-white' : stitch.difficulty === 'Intermediate' ? 'bg-yellow-500 text-white' : 'bg-red-500 text-white'}`
                }, stitch.difficulty),
                h('div', { key: 'category', className: 'mt-2 text-pink-100' }, stitch.category)
              ])
            ])
          ]),
          h('div', { key: 'body', className: 'p-6' }, [
            h('div', { key: 'grid', className: 'grid lg:grid-cols-2 gap-8' }, [
              h('div', { key: 'instructions' }, [
                h('div', { key: 'inst-header', className: 'flex items-center mb-4' }, [
                  h(BookIcon, { key: 'icon' }),
                  h('h2', { key: 'title', className: 'text-2xl font-semibold text-gray-800 ml-2' }, 'Instructions')
                ]),
                h('ol', { key: 'inst-list', className: 'space-y-3' }, stitch.instructions.map((instruction, index) =>
                  h('li', { key: index, className: 'flex' }, [
                    h('span', { key: 'number', className: 'bg-pink-100 text-pink-800 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium mr-3 flex-shrink-0' }, index + 1),
                    h('span', { key: 'text', className: 'text-gray-700 leading-relaxed' }, instruction)
                  ])
                ))
              ]),
              h('div', { key: 'video' }, [
                h('div', { key: 'video-header', className: 'flex items-center mb-4' }, [
                  h(PlayIcon, { key: 'icon' }),
                  h('h2', { key: 'title', className: 'text-2xl font-semibold text-gray-800 ml-2' }, 'Video Tutorial')
                ]),
                h('div', { key: 'video-container', className: 'aspect-video bg-gray-100 rounded-lg overflow-hidden' }, [
                  h('a', {
                    href: `https://www.youtube.com/results?search_query=${encodeURIComponent(stitch.name + ' crochet tutorial')}`,
                    target: '_blank',
                    rel: 'noopener noreferrer',
                    className: 'inline-block w-full h-full text-center text-pink-600 hover:text-pink-800 font-semibold underline py-12'
                  }, `🔗 Search for "${stitch.name} crochet tutorial" on YouTube`)
                ])
              ])
            ]),
            h('div', { key: 'tips', className: 'mt-8' }, [
              h('div', { key: 'tips-header', className: 'flex items-center mb-4' }, [
                h(LightbulbIcon, { key: 'icon' }),
                h('h2', { key: 'title', className: 'text-2xl font-semibold text-gray-800 ml-2' }, 'Tips & Tricks')
              ]),
              h('div', { key: 'tips-content', className: 'bg-yellow-50 rounded-lg p-4' }, [
                h('ul', { key: 'tips-list', className: 'space-y-2' }, stitch.tips.map((tip, index) =>
                  h('li', { key: index, className: 'flex items-start' }, [
                    h('span', { key: 'icon', className: 'text-yellow-600 mr-2' }, '💡'),
                    h('span', { key: 'text', className: 'text-gray-700' }, tip)
                  ])
                ))
              ])
            ]),
            h('div', { key: 'variations', className: 'mt-8' }, [
              h('h2', { key: 'var-title', className: 'text-2xl font-semibold text-gray-800 mb-4' }, 'Variations'),
              h('div', { key: 'var-grid', className: 'grid md:grid-cols-2 lg:grid-cols-3 gap-4' }, stitch.variations.map((variation, index) =>
                h('div', { key: index, className: 'bg-purple-50 rounded-lg p-4 border-l-4 border-purple-400' }, [
                  h('span', { key: 'text', className: 'text-purple-800 font-medium' }, variation)
                ])
              ))
            ])
          ])
        ])
      ])
    ]);
  };

  const HomePage = ({ stitches, onStitchClick, searchTerm, onSearchChange }) => {
    const [selectedCategory, setSelectedCategory] = useState('All');
    const categories = ['All', ...new Set(Object.values(stitches).map(s => s.category))];

    const filteredStitches = Object.values(stitches).filter(stitch => {
      const matchesSearch = stitch.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        stitch.description.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesCategory = selectedCategory === 'All' || stitch.category === selectedCategory;
      return matchesSearch && matchesCategory;
    });

    return h(Fragment, {}, [
      h('div', {
        key: 'header',
        className: 'bg-gradient-to-r from-pink-500 to-purple-600 text-white py-12'
      }, [
        h('div', {
          key: 'header-content',
          className: 'max-w-6xl mx-auto px-6 text-center'
        }, [
          h('h1', { key: 'title', className: 'text-4xl font-bold mb-4' }, 'Crochet Stitch Library'),
          h('p', { key: 'subtitle', className: 'text-xl text-pink-100' }, 'Your one-stop resource for crochet stitches')
        ])
      ]),
      h('div', {
        key: 'content-wrapper',
        className: 'max-w-6xl mx-auto px-6 py-8'
      }, [
        h('div', {
          key: 'search-filters',
          className: 'flex flex-col md:flex-row gap-4 mb-6'
        }, [
          h('div', {
            key: 'search-container',
            className: 'flex-1 flex items-center border border-gray-300 rounded-lg bg-white focus-within:ring-2 focus-within:ring-pink-500 focus-within:border-transparent transition-all'
          }, [
            h('div', { key: 'search-icon-wrapper', className: 'pl-3 pr-2 text-gray-400' }, [
              h(SearchIcon, {})
            ]),
            h('input', {
              key: 'search-input', type: 'text', placeholder: 'Search stitches...', value: searchTerm,
              onChange: (e) => onSearchChange(e.target.value),
              className: 'w-full py-2 bg-transparent border-none focus:ring-0 focus:outline-none'
            })
          ]),
          h('select', {
            key: 'category-select', value: selectedCategory,
            onChange: (e) => setSelectedCategory(e.target.value),
            className: 'px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-pink-500'
          }, categories.map(category => h('option', { key: category, value: category }, category)))
        ]),
        h('div', {
          key: 'stats',
          className: 'grid grid-cols-2 md:grid-cols-4 gap-4 mb-8'
        }, [
          h('div', { key: 'total', className: 'text-center p-4 bg-white rounded-lg shadow' }, [
            h('div', { key: 'number', className: 'text-2xl font-bold text-pink-600' }, Object.keys(stitches).length),
            h('div', { key: 'label', className: 'text-gray-600' }, 'Total Stitches')
          ]),
          h('div', { key: 'beginner', className: 'text-center p-4 bg-white rounded-lg shadow' }, [
            h('div', { key: 'number', className: 'text-2xl font-bold text-green-600' }, Object.values(stitches).filter(s => s.difficulty === 'Beginner').length),
            h('div', { key: 'label', className: 'text-gray-600' }, 'Beginner')
          ]),
          h('div', { key: 'intermediate', className: 'text-center p-4 bg-white rounded-lg shadow' }, [
            h('div', { key: 'number', className: 'text-2xl font-bold text-yellow-600' }, Object.values(stitches).filter(s => s.difficulty === 'Intermediate').length),
            h('div', { key: 'label', className: 'text-gray-600' }, 'Intermediate')
          ]),
          h('div', { key: 'advanced', className: 'text-center p-4 bg-white rounded-lg shadow' }, [
            h('div', { key: 'number', className: 'text-2xl font-bold text-red-600' }, Object.values(stitches).filter(s => s.difficulty === 'Advanced').length),
            h('div', { key: 'label', className: 'text-gray-600' }, 'Advanced')
          ])
        ]),
        h('div', {
          key: 'stitch-grid',
          className: 'grid md:grid-cols-2 lg:grid-cols-3 gap-6'
        }, filteredStitches.map(stitch =>
          h(StitchCard, { key: stitch.id, stitch: stitch, onClick: onStitchClick })
        )),
        filteredStitches.length === 0 && h('div', { key: 'no-results', className: 'text-center py-12' }, [
          h('div', { key: 'emoji', className: 'text-6xl mb-4' }, '🧐'),
          h('p', { key: 'message', className: 'text-gray-600 text-lg' }, 'No stitches found. Try a different search!')
        ])
      ])
    ]);
  };

  const CrochetStitchLibrary = () => {
    const { currentRoute, navigate } = useRouter();
    const [searchTerm, setSearchTerm] = useState('');

    const currentStitch = currentRoute.startsWith('/stitch/')
      ? stitchLibrary[currentRoute.replace('/stitch/', '')]
      : null;

    return h('div', { className: 'w-full' }, [
        currentRoute === '/' ?
          h(HomePage, {
            key: 'homepage',
            stitches: stitchLibrary,
            onStitchClick: (stitchId) => navigate(`/stitch/${stitchId}`),
            searchTerm: searchTerm,
            onSearchChange: setSearchTerm
          }) :
        currentStitch ?
          h(StitchDetail, {
            key: 'stitch-detail',
            stitch: currentStitch,
            onBack: () => navigate('/')
          }) :
          h('div', { key: 'not-found', className: 'max-w-6xl mx-auto px-6 text-center py-12' }, [
            h('h2', { key: 'title', className: 'text-2xl font-bold text-gray-800 mb-4' }, '404 - Stitch Not Found'),
            h('button', { key: 'return-btn', onClick: () => navigate('/'), className: 'text-pink-600 hover:text-pink-700' }, 'Return to Library')
          ])
    ]);
  };

  // ** NEW: Mount the React component inside a Shadow DOM for style encapsulation **
  const container = document.getElementById('crochet-stitch-library');
  if (container) {
    // Clear the loading message
    container.innerHTML = '';
    
    // Create a Shadow DOM
    const shadowRoot = container.attachShadow({ mode: 'open' });

    // 1. Link Tailwind CSS inside the Shadow DOM
    const tailwindLink = document.createElement('link');
    tailwindLink.rel = 'stylesheet';
    tailwindLink.href = 'https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css';
    shadowRoot.appendChild(tailwindLink);

    // 2. Add custom styles inside the Shadow DOM
    const customStyles = document.createElement('style');
    customStyles.textContent = `
      :host {
        width: 100%;
        min-height: 600px;
      }
      * {
        box-sizing: border-box;
      }
      ::-webkit-scrollbar {
        width: 8px;
      }
      ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }
      ::-webkit-scrollbar-thumb {
        background: #ec4899; /* pink-500 */
        border-radius: 4px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background: #db2777; /* pink-600 */
      }
      .aspect-video {
        position: relative;
        width: 100%;
        padding-bottom: 56.25%; /* 16:9 ratio */
      }
      .aspect-video > * {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .bg-gradient-to-r {
        background-image: linear-gradient(to right, var(--tw-gradient-stops));
      }
      .from-pink-500 {
        --tw-gradient-from: #ec4899;
        --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(236, 72, 153, 0));
      }
      .to-purple-600 {
        --tw-gradient-to: #9333ea;
      }
    `;
    shadowRoot.appendChild(customStyles);

    // 3. Create a root element for React inside the Shadow DOM
    const reactRootEl = document.createElement('div');
    reactRootEl.id = 'react-root';
    shadowRoot.appendChild(reactRootEl);

    // 4. Render the React app into the Shadow DOM's root element
    const root = createRoot(reactRootEl);
    root.render(h(CrochetStitchLibrary));
  }
}
</script>






